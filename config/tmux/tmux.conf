# Enable Vim mode
set-window-option -g mode-keys vi

# Source configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "Configuration Reloaded!"

# Pane movement similar to vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Disable mouse
setw -g mouse off

# Setting recommended by NeoVim
set -sg escape-time 10
set -g focus-events on
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:RGB"

# Statusline
set -g status on
set -g status-interval 1
set -g status-justify centre # Careful! It is spelled centre not center.
set -g status-style fg=white,bg=default
set -g status-position bottom

set -g pane-active-border-style fg=colour214
set -g pane-border-style fg=colour239

set -g status-left ""
set -g status-right "#S | #($ZDOTDIR/functions/battery) | %d-%m %H:%M"
set-window-option -g window-status-current-format ""


set -g pane-border-status bottom
set -g pane-border-format "#{pane_index}"

# Smart pane switching with awareness of Vim splits.
# See: https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

# Open new panes with current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Easier splits
bind v split-window -c "#{pane_current_path}"
bind h split-window -h -c "#{pane_current_path}"
